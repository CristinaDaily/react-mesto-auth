{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n  _checkResponceResult(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Error:${res.status}`);\n  }\n  getAppInfo() {\n    return Promise.all([this.getInitialCards(), this.getUserInfo()]);\n  }\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(this._checkResponceResult);\n  }\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(this._checkResponceResult);\n  }\n  editProfile({\n    name,\n    about\n  }) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(this._checkResponceResult);\n  }\n  addNewCard({\n    name,\n    link\n  }) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(this._checkResponceResult);\n  }\n  addLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._checkResponceResult);\n  }\n  deleteLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponceResult);\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponceResult);\n  }\n  setAvatar(link) {\n    return fetch(`${this._baseUrl}/users/me/avatar `, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: link\n      })\n    }).then(this._checkResponceResult);\n  }\n}\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-71',\n  headers: {\n    authorization: 'b334b420-c534-4216-b0c2-8d90ef156992',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","_checkResponceResult","res","ok","json","Promise","reject","status","getAppInfo","all","getInitialCards","getUserInfo","fetch","then","editProfile","name","about","method","body","JSON","stringify","addNewCard","link","addLike","cardId","deleteLike","deleteCard","setAvatar","avatar","api","authorization"],"sources":["/Users/kristina/dev/react-mesto-test version/src/utils/Api.js"],"sourcesContent":["class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _checkResponceResult(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Error:${res.status}`);\n  }\n\n  getAppInfo() {\n    return Promise.all([this.getInitialCards(), this.getUserInfo()]);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n    }).then(this._checkResponceResult);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n    }).then(this._checkResponceResult);\n  }\n\n  editProfile({ name, about }) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about,\n      }),\n    }).then(this._checkResponceResult);\n  }\n\n  addNewCard({ name, link }) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link,\n      }),\n    }).then(this._checkResponceResult);\n  }\n\n  addLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers,\n    }).then(this._checkResponceResult);\n  }\n\n  deleteLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers,\n    }).then(this._checkResponceResult);\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    }).then(this._checkResponceResult);\n  }\n\n  setAvatar(link) {\n    return fetch(`${this._baseUrl}/users/me/avatar `, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: link,\n      }),\n    }).then(this._checkResponceResult);\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-71',\n  headers: {\n    authorization: 'b334b420-c534-4216-b0c2-8d90ef156992',\n    'Content-Type': 'application/json',\n  },\n});\n\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}