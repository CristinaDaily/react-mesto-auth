{"ast":null,"code":"var _jsxFileName = \"/Users/kristina/dev/react-mesto-test version/src/components/Header.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport logo from '../images/header-logo.svg';\nimport { Link, useLocation } from 'react-router-dom';\nimport * as token from '../utils/token.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Header() {\n  _s();\n  const location = useLocation();\n  const history = useHistory();\n  function signOut() {\n    token.removeToken();\n    history.push('/sign-in');\n  }\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"\\u041B\\u043E\\u0433\\u043E\",\n      className: \"header__logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header__container\",\n      children: [location.pathname === '/' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header__user-email\",\n        children: \"email@email.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"header__navbar\",\n        children: [location.pathname === '/' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"header__link\",\n            onClick: signOut,\n            children: \"\\u0412\\u044B\\u0439\\u0442\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)\n        }, void 0, false), location.pathname === '/sign-up' && /*#__PURE__*/_jsxDEV(Link, {\n          className: \"header__link\",\n          to: \"/sign-in\",\n          children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), location.pathname === '/sign-in' && /*#__PURE__*/_jsxDEV(Link, {\n          className: \"header__link\",\n          to: \"/sign-up\",\n          children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"4MA4xKwbe/GsHm2ZZQRFLsGTqdU=\", true, function () {\n  return [useLocation];\n});\n_c = Header;\nexport default Header;\n/*\nconst Header = () => {\n  return (\n    <header className='header'>\n      <img src={logo} alt='Лого' className='header__logo' />\n      <Routes>\n        <Route\n          path='registration'\n          element={\n            <div>\n              <Link to='/sign-up'>Регистрация</Link>\n            </div>\n          }\n        />\n        <Route\n          path='login'\n          element={\n            <div>\n              <Link to='/sign-in'>Войти</Link>\n            </div>\n          }\n        />\n        <Route\n          path='logout'\n          element={\n            <div>\n              <Link to='/sign-in'>Выйти</Link>\n            </div>\n          }\n        />\n      </Routes>\n    </header>\n  );\n};*/\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","logo","Link","useLocation","token","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","_s","location","history","useHistory","signOut","removeToken","push","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","pathname","onClick","to","_c","$RefreshReg$"],"sources":["/Users/kristina/dev/react-mesto-test version/src/components/Header.jsx"],"sourcesContent":["import React from 'react';\nimport logo from '../images/header-logo.svg';\nimport { Link, useLocation } from 'react-router-dom';\nimport * as token from '../utils/token.js';\n\nfunction Header() {\n  const location = useLocation();\n  const history = useHistory();\n\n  function signOut() {\n    token.removeToken();\n    history.push('/sign-in');\n  }\n\n  return (\n    <header className='header'>\n      <img src={logo} alt='Лого' className='header__logo' />\n      <div className='header__container'>\n        {location.pathname === '/' && (\n          <div className='header__user-email'>email@email.com</div>\n        )}\n        <nav className='header__navbar'>\n          {location.pathname === '/' && (\n            <>\n              <Link className='header__link' onClick={signOut}>\n                Выйти\n              </Link>\n            </>\n          )}\n          {location.pathname === '/sign-up' && (\n            <Link className='header__link' to='/sign-in'>\n              Войти\n            </Link>\n          )}\n          {location.pathname === '/sign-in' && (\n            <Link className='header__link' to='/sign-up'>\n              Регистрация\n            </Link>\n          )}\n        </nav>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n/*\nconst Header = () => {\n  return (\n    <header className='header'>\n      <img src={logo} alt='Лого' className='header__logo' />\n      <Routes>\n        <Route\n          path='registration'\n          element={\n            <div>\n              <Link to='/sign-up'>Регистрация</Link>\n            </div>\n          }\n        />\n        <Route\n          path='login'\n          element={\n            <div>\n              <Link to='/sign-in'>Войти</Link>\n            </div>\n          }\n        />\n        <Route\n          path='logout'\n          element={\n            <div>\n              <Link to='/sign-in'>Выйти</Link>\n            </div>\n          }\n        />\n      </Routes>\n    </header>\n  );\n};*/\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,2BAA2B;AAC5C,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAO,KAAKC,KAAK,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,OAAO,GAAGC,UAAU,CAAC,CAAC;EAE5B,SAASC,OAAOA,CAAA,EAAG;IACjBV,KAAK,CAACW,WAAW,CAAC,CAAC;IACnBH,OAAO,CAACI,IAAI,CAAC,UAAU,CAAC;EAC1B;EAEA,oBACEV,OAAA;IAAQW,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACxBZ,OAAA;MAAKa,GAAG,EAAElB,IAAK;MAACmB,GAAG,EAAC,0BAAM;MAACH,SAAS,EAAC;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtDlB,OAAA;MAAKW,SAAS,EAAC,mBAAmB;MAAAC,QAAA,GAC/BP,QAAQ,CAACc,QAAQ,KAAK,GAAG,iBACxBnB,OAAA;QAAKW,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACzD,eACDlB,OAAA;QAAKW,SAAS,EAAC,gBAAgB;QAAAC,QAAA,GAC5BP,QAAQ,CAACc,QAAQ,KAAK,GAAG,iBACxBnB,OAAA,CAAAE,SAAA;UAAAU,QAAA,eACEZ,OAAA,CAACJ,IAAI;YAACe,SAAS,EAAC,cAAc;YAACS,OAAO,EAAEZ,OAAQ;YAAAI,QAAA,EAAC;UAEjD;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC,gBACP,CACH,EACAb,QAAQ,CAACc,QAAQ,KAAK,UAAU,iBAC/BnB,OAAA,CAACJ,IAAI;UAACe,SAAS,EAAC,cAAc;UAACU,EAAE,EAAC,UAAU;UAAAT,QAAA,EAAC;QAE7C;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CACP,EACAb,QAAQ,CAACc,QAAQ,KAAK,UAAU,iBAC/BnB,OAAA,CAACJ,IAAI;UAACe,SAAS,EAAC,cAAc;UAACU,EAAE,EAAC,UAAU;UAAAT,QAAA,EAAC;QAE7C;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CACP;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACd,EAAA,CAtCQD,MAAM;EAAA,QACIN,WAAW;AAAA;AAAAyB,EAAA,GADrBnB,MAAM;AAwCf,eAAeA,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}