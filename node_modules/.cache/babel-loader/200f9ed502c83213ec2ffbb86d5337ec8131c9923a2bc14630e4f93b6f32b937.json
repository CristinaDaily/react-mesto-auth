{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => {\n    if (!response.ok) {}\n    return response.json();\n  });\n};\nexport const login = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => {\n    return response.json();\n  });\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(responses => responses.json());\n};","map":{"version":3,"names":["BASE_URL","register","password","email","fetch","method","headers","body","JSON","stringify","then","response","ok","json","login","getContent","token","Authorization","responses"],"sources":["/Users/kristina/dev/react-mesto-test version/src/utils/Auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ password, email }),\n  }).then((response) => {\n    if (!response.ok) {\n    }\n    return response.json();\n  });\n};\n\nexport const login = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ password, email }),\n  }).then((response) => {\n    return response.json();\n  });\n};\n\nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n  }).then((responses) => responses.json());\n};\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,OAAO,MAAMC,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC3C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,QAAQ;MAAEC;IAAM,CAAC;EAC1C,CAAC,CAAC,CAACO,IAAI,CAAEC,QAAQ,IAAK;IACpB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE,CAClB;IACA,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,KAAK,GAAGA,CAACZ,QAAQ,EAAEC,KAAK,KAAK;EACxC,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,QAAQ;MAAEC;IAAM,CAAC;EAC1C,CAAC,CAAC,CAACO,IAAI,CAAEC,QAAQ,IAAK;IACpB,OAAOA,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAME,UAAU,GAAIC,KAAK,IAAK;EACnC,OAAOZ,KAAK,CAAE,GAAEJ,QAAS,WAAU,EAAE;IACnCK,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCW,aAAa,EAAG,UAASD,KAAM;IACjC;EACF,CAAC,CAAC,CAACN,IAAI,CAAEQ,SAAS,IAAKA,SAAS,CAACL,IAAI,CAAC,CAAC,CAAC;AAC1C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}